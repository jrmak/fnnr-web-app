"""
def _readCSV(text):
    # reads in a .csv file
    cells = []
    f = open(text, 'r')
    body = f.readlines()
    for line in body[1:]:
        cells.append(line.split(","))
    return cells

cells = _readCSV('resources.csv')

resource_dict = {}

for set in cells:
    hh = int(set[0].strip("\""))
    resource_dict.setdefault(hh, []).append((int(set[2].strip("\"\n")), int(set[1].strip("\"\n"))))
print(resource_dict)

"""

# The code above is commented out because its only purpose is to generate the dictionary below.
# This dictionary is too long to put in model.py. It assigns resource positions for each household.
# Every step (see agents.py), a single gatherer is either heading towards a random resource or heading back home.
resource_dict = {2: [(79, 86), (79, 87), (79, 86)], 3: [(79, 85), (79, 85), (77, 85)], 5: [(77, 86), (76, 85)],
                 6: [(78, 87)], 8: [(79, 86), (79, 86), (77, 85)], 9: [(79, 86)], 11: [(76, 86), (78, 86), (77, 85)],
                 14: [(76, 86), (76, 86)], 15: [(78, 85), (78, 85), (77, 85)], 16: [(78, 86)], 17: [(77, 85), (77, 85)],
                 19: [(77, 85), (77, 86), (77, 85)], 22: [(79, 86), (78, 86), (79, 87)],
                 25: [(78, 86), (78, 85), (77, 86)], 27: [(77, 86)], 30: [(77, 84), (74, 82), (76, 83)],
                 31: [(75, 84), (75, 85), (75, 84)], 32: [(76, 85)], 34: [(74, 87), (75, 85)],
                 35: [(75, 84), (76, 84), (77, 84)], 36: [(74, 86), (75, 85)],
                 39: [(78, 87), (75, 84), (75, 86), (73, 88), (74, 87)], 41: [(75, 84), (74, 87), (76, 84)],
                 42: [(75, 84), (76, 84), (76, 84)], 43: [(75, 85)], 46: [(74, 86), (73, 83), (75, 85)],
                 47: [(75, 88), (76, 85), (76, 88)], 48: [(73, 87), (68, 79), (75, 86), (75, 85)],
                 49: [(76, 85), (75, 86), (75, 85)], 53: [(75, 83), (76, 84)], 54: [(75, 84), (74, 84), (75, 84)],
                 55: [(74, 84), (68, 80)], 57: [(75, 83), (75, 83), (75, 88), (75, 85)], 63: [(44, 83), (43, 83)],
                 64: [(43, 81), (43, 82)], 71: [(43, 82)], 72: [(43, 82), (43, 82)], 85: [(44, 84), (43, 82)],
                 100: [(44, 83)], 101: [(40, 79), (44, 77), (39, 81)], 102: [(40, 79), (40, 79)],
                 103: [(40, 79), (40, 78)], 104: [(40, 80)], 108: [(40, 81), (40, 81)],
                 113: [(38, 81), (39, 81), (39, 80), (39, 81)], 118: [(38, 80), (38, 82)],
                 120: [(40, 80), (41, 78), (40, 81)], 121: [(40, 79)], 123: [(39, 81), (38, 81), (39, 82)],
                 128: [(38, 82)], 129: [(39, 79), (61, 57), (39, 81)], 131: [(78, 82), (79, 82)],
                 132: [(79, 81), (77, 82)], 134: [(80, 81), (79, 82)], 135: [(80, 85)],
                 137: [(81, 84), (81, 85), (82, 86), (82, 85)], 138: [(78, 82)], 140: [(80, 82)],
                 141: [(77, 80), (77, 82)], 142: [(79, 81), (79, 81)], 143: [(79, 82), (79, 82), (79, 82)],
                 144: [(78, 80), (78, 81), (78, 81)], 145: [(78, 82), (78, 82)], 146: [(78, 81)],
                 148: [(79, 79), (78, 78)], 149: [(78, 79)], 150: [(78, 80)], 151: [(78, 80), (77, 78), (77, 77)],
                 153: [(79, 79), (76, 78), (78, 79)], 154: [(79, 79), (78, 80)], 155: [(80, 79), (78, 80)],
                 157: [(78, 79), (78, 79), (78, 79)], 159: [(79, 81), (77, 78)], 161: [(78, 78), (79, 79), (82, 81)],
                 163: [(79, 79), (78, 80), (79, 79), (78, 79)], 165: [(78, 79)], 166: [(79, 79), (79, 79)],
                 167: [(79, 79), (80, 80)], 169: [(78, 79), (78, 79), (79, 80)], 136: [(78, 81), (79, 81), (79, 82)]}